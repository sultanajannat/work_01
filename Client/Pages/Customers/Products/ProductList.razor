@page "/Product/List"
@using work_01.Shared.Models
@using work_01.Shared.DTO

@inject HttpClient http
@inject IToastService toastservice
@inject NavigationManager navigationManager


<div class="row">
	<div class="col-12">
		<h2 class="display-4">Product List</h2>
		<div class="d-flex justify-content-end">
			<a class="btn btn-outline-primary btn-sm" href="/products/Create">Add new</a>
		</div>
	</div>
</div>
@if (products is null)
{
	<div>loading...</div>
}
else
{
		<table class="table table-bordered table-striped table-sm">
			<thead class="table-primary">
				<tr>
					<th>Image</th>
					<th>Name</th>
					<th>Price</th>
					<th>available</th>
					<th>Action</th>
				</tr>
			</thead>
			<tbody>
				@foreach (var p in products)
			{
				<tr>
					<td>
						<img src="/Images/@p.Picture" class="rounded-circle" width="50"/>
					</td>
					<td>@p.ProductName</td>
					<td>@p.Price.ToString("0.00")</td>
					<td>@p.IsAvailable</td>
					<td></td>
				</tr>
			}
			</tbody>
		</table>
}

@code {
	private Product[]? products;
	protected override async Task OnInitializedAsync()
	{
		products = await http.GetFromJsonAsync<Product[]>("api/Products");
	}
}
